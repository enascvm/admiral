{
  "header": {
    "title": {
      "admiral": "Admiral",
      "vic": "vSphere Integrated Containers",
      "compute": "Infrastructure"
    },
    "navigation": {
      "home": "Home",
      "administration": "Administration"
    },
    "actions": {
      "perferences": "Preferences",
      "logout": "Log out"
    }
  },
  "projects": {
    "title": "Projects",
    "project": "Project",
    "users": "Users",
    "administrators": "Administrators",
    "projectRegistry": "Project Registry",
    "public": "Public",
    "publicDescription": "Public access to project registry",
    "private": "Private",
    "clusters": "Clusters",
    "clustersVic": "Container Hosts",
    "repositories": "Repositories",
    "internalRepositories": "Internal Repositories",
    "infrastructure": "Infrastructure",
    "registryReplication": "Registry Replication",
    "configuration": "Configuration",
    "globalSelectLabel": "Project",
    "globalSelectLabelEmbedded": "Group",
    "edit": {
      "titleNew": "New Project",
      "titleEdit": "Edit Project",
      "name": "Name",
      "nameRequired": "Name is required.",
      "description": "Description"
    },
    "delete": {
      "title": "Remove Project",
      "confirmation": "Confirm removing of project {{projectName}}. The operation cannot be undone.",
      "confirmationVic": "Confirm removing of project {{projectName}}. The operation cannot be undone."
    },
    "summary": {
      "title": "Summary",
      "type": "Type:",
      "creationDate": "Created:",
      "team": {
        "title": "Project Team",
        "administrators": "Project Admins:",
        "members": "Developers:",
        "viewers": "Viewers",
        "users": "users"
      },
      "repositories": {
        "title": "Internal Repositories",
        "repositories": "Repositories:"
      },
      "resources": {
        "title": "Project Resources",
        "clusters": "Clusters:",
        "clustersVic": "Container Hosts:",
        "templates": "App Templates:",
        "images": "Images:"
      }
    },
    "members": {
      "title": "Members",
      "columnName": "Name",
      "columnPrimaryId": "Primary ID",
      "columnSource": "Source",
      "columnRole": "Role",
      "count": "members",
      "addMembers": {
        "title": "Add Users and Groups",
        "description": "Add Users and groups to {{projectName}} by their ID or email.",
        "fieldTitleId": "ID or email",
        "fieldRequiredId": "ID is required.",
        "searchPlaceholder": "Search for users",
        "fieldTitleRole": "Role in project"
      },
      "editMember": {
        "title": "Edit member role in project",
        "description": "Edit member {{memberId}} role in project {{projectName}}."
      },
      "roles": {
        "administrator": "DevOps Administrator",
        "member": "Developer",
        "viewer": "Viewer"
      },
      "source": {
        "local": "Local",
        "ldap": "LDAP"
      },
      "deleteMembers": {
        "title": "Remove Members from Project",
        "confirmation": "Are you sure you want to remove the selected members from this project?"
      }
    },
    "projectRegistries": {
        "title": "Project Registries",
        "new": "New Project Registry",
        "delete": "Delete",
        "nameTitle": "Name",
        "statusTitle": "Status",
        "scopeTitle": "Scope",
        "addressTitle": "Address",
        "searchPlaceholder": "Search for registries",
        "scope": {
          "global": "Global",
          "project": "Project"
        },
        "status": {
          "active": "Active",
          "disabled": "Disabled"
        },
        "deleteConfirmation": {
          "title": "Remove Project Registries",
          "description": "Confirm the removal of the selected project registries. Note that global registries cannot be removed from this view. The operation cannot be undone."
        },
        "globalRegistriesDeletionSkipped": {
          "warningMessage": "The global registries from your selection were not deleted. It is not possible to delete global registries from this view."
        },
        "registryDetails": {
          "title": "Add Project Registry",
          "editTitle": "Edit Project Registry",
          "descriptions": "Add registry to the project",
          "fieldAddress": "Address",
          "fieldName": "Name",
          "fieldCredentials": "Login credentials"
        },
        "count": "registries",
        "insecureRegistryHint": "Plain HTTP registry detected! Your connection to this registry is not secure. Make sure your hosts are properly configured and can connect to it. <a target=\"_blank\" href=\"https://docs.docker.com/registry/insecure/#/deploying-a-plain-http-registry\">More info</a>"
    },
    "config": {
      "title": "Configuration",
      "projectRegistry": "Project registry",
      "public": "Public",
      "publicDescription": "Making a project registry public will make all repositories accessible to everyone.",
      "deploymentSecurity": "Deployment security",
      "enableContentTrust": "Enable content trust",
      "enableContentTrustDescription": "Only allow verified images to be deployed.",
      "preventVulnerableImagesFromRunning": "Prevent vulnerable images from running",
      "preventVulnerableImagesFromRunningDescription_part1": "Prevent images with vulnerability severity of",
      "preventVulnerableImagesFromRunningDescription_part2": "and above from being deployed.",
      "preventRunSeverity": {
        "low": "Low",
        "medium": "Medium",
        "high": "High"
      },
      "vulnerabilityScanning": "Vulnerability scanning",
      "automaticallyScanImagesOnPush": "Automatically scan images on push",
      "automaticallyScanImagesOnPushDescription": "Automatically scan images when they are pushed to the project registry."
    },
    "search": {
      "placeholder": "Search for projects"
    },
    "actions": {
      "title": "Projects",
      "details": "Details",
      "makePublic": "Make public",
      "makePrivate": "Make private",
      "addUsersAndGroups": "Add users and groups",
      "addClusters": "Add clusters",
      "addClustersVic": "Add container hosts"
    }
  },
  "registries": {
    "title": "Global Registries",
    "sourceRegistries": "Source Registries",
    "replicationEndpoints": "Replication Endpoints",
    "replicationRules": "Replication Rules"
  },
  "projectRepositories": {
      "containerDeploymentStarted": "Container deployment started. See Requests for more details."
  },
  "clusters": {
    "title": "Clusters",
    "titleVic": "Container Hosts",
    "cluster": "Cluster",
    "clusterVic": "Container Host",
    "new": "Cluster",
    "newVic": "Container Host",
    "status": "Status",
    "state": {
      "ON": "ON",
      "OFF": "OFF",
      "DISABLED": "DISABLED",
      "WARNING": "WARNING",
      "PROVISIONING": "PROVISIONING",
      "RESIZING": "RESIZING",
      "DESTROYING": "DESTROYING",
      "UNREACHABLE": "UNREACHABLE"
    },
    "search": {
      "placeholder": "Search for clusters"
    },
    "actions": {
      "rescan": "Rescan",
      "disable": "Disable",
      "enable": "Enable"
    },
    "type": "Type",
    "containers": "Containers",
    "cpu": "CPU",
    "memory": "Memory",
    "summary": {
      "title": "Summary",
      "address": "Address:",
      "adminPortal": "Admin Portal:",
      "type": "Type:",
      "clusterOverview": "Cluster Overview",
      "clusterOverviewVic": "Container Host Overview",
      "clusterResources": "Cluster Resources",
      "clusterResourcesVic": "Container Host Resources",
      "status": "Status:",
      "creationDate": "Added:",
      "containersCount": "Containers:",
      "cpu": "vCPU:",
      "memory": "Memory:"
    },
    "resources": {
      "addHostButton": "Host",
      "title": "Resources",
      "address": "Address",
      "status": "Status",
      "containersCount": "Containers",
      "memory": "Memory",
      "cpu": "CPU",
      "addHost": {
        "title": "Add Host",
        "address": "URL",
        "addressRequired": "URL is required.",
        "deploymentPolicy": "Deployment policy"
      },
      "editHost": {
        "title": "Edit Host",
        "name": "Name"
      }
    },
    "edit": {
      "titleNew": "New Cluster",
      "titleNewVic": "New Container Host",
      "titleEdit": "Edit Cluster",
      "titleEditVic": "Edit Container Host",
      "name": "Name",
      "nameRequired": "Name is required.",
      "description": "Description",
      "type": "Type",
      "typeDocker": "DOCKER",
      "typeVch": "VCH",
      "url": "URL",
      "urlRequired": "Cluster URL is required.",
      "urlRequiredVic": "Container host URL is required.",
      "publicAddress": "Public address",
      "publicAddressPlaceholder": "IP address or hostname",
      "publicAddressDescription": "The address where published container ports can be reached. Defaults to the address from the URL field.",
      "credentials": "Credentials"
    },
    "delete": {
      "title": "Remove Cluster",
      "titleVic": "Remove Container Host",
      "confirmation": "Confirm removing of cluster {{clusterName}}. The deployed entities associated to this cluster will be removed as well. The operation cannot be undone.",
      "confirmationVic": "Confirm removing of container host {{clusterName}}. The deployed entities associated to this container host will be removed as well. The operation cannot be undone."
    },
    "backLinkTextProject": "Project"
  },
  "kubernetes": {
    "clusters": {
      "title": "PKS Clusters",
      "addBtn": "Add Cluster",
      "newBtn": "New Cluster",
      "nodeCount": "Nodes",
      "dashboard": "Dashboard",
      "edit": {
        "name": "Name",
        "nameRequired": "Name is required.",
        "description": "Description",
        "url": "URL",
        "invalidUrl": "URL must contain a valid scheme and hostname.",
        "credentials": "Credentials"
      },
      "search": {
        "placeholder": "Search for Clusters"
      },
      "add": {
        "existing": "Existing PKS Cluster",
        "external": "External Cluster"
      },
      "details": {
        "summary": {
          "kubeConfigBtn": "KubeConfig",
          "kubeConfigTooltip": "Download a configuration file for the kubectl command-line tool to gain access to this cluster.",
          "title": "Summary",
          "nodeCount": "Nodes:",
          "dashboard": "Dashboard:",
          "planName": "Plan:",
          "masterNodesIPs": "Master IPs:",
          "dashboardInstalled": "INSTALLED",
          "dashboardNotInstalled": "NOT INSTALLED",
          "dashboardTooltip": "You may access the Dashboard UI via browser if the Kubernetes API Server is set up to allow authentication with username and password.",
          "totalMemory": "Total Memory:"
        },
        "nodes": {
          "title": "Nodes",
          "nameColumn": "Name",
          "cpuCountColumn": "# CPUs",
          "totalMemoryColumn": "Total Memory",
          "powerState": {
            "ON": "On",
            "OFF": "Off"
          },
          "count": "nodes"
        }
      },
      "delete": {
        "title": "Delete {{clusterName}}",
        "confirmation": "Confirm deletion of cluster {{clusterName}}. The deployed entities associated to this cluster will be removed as well."
        },
      "destroy": {
        "title": "Destroy {{clusterName}}",
        "confirmation": "Confirm destroying cluster {{clusterName}}. The deployed entities associated to this cluster will be destroyed as well. The operation cannot be undone."
      }
    },
    "deployments": {
      "title": "Deployments",
      "search": {
        "placeholder": "Search for deployments"
      },
      "item": {
        "creation": "Created:",
        "namespace": "Namespace:",
        "containersNumber": "Containers:",
        "restartPolicy": "Restart Policy:",
        "restartPolicyValues": {
            "Always": "Always",
            "OnFailure": "On Failure",
            "Never": "Never"
        },
        "strategy": "Strategy:",
        "strategyValues": {
            "Recreate": "Recreate",
            "RollingUpdate": "Rolling Update"
        },
        "replicas": "Replicas:",
        "terminationGracePeriodSeconds": "Termination Grace Period (seconds):",
        "dnsPolicy": "DNS Policy:",
        "dnsPolicyValues": {
            "Default": "Default",
            "ClusterFirst": "Cluster First",
            "ClusterFirstWithHostNet": "Cluster First With Host Network",
            "None": "None"
        },
        "summaryTitle": "Summary",
        "containersTitle": "Containers",
        "containers": {
          "name": "Name",
          "image": "Image",
          "env": "Env"
        }
      }
    },
    "pods": {
        "title": "Pods",
        "search": {
            "placeholder": "Search for pods"
        },
        "item": {
            "creation": "Created:",
            "namespace": "Namespace:",
            "containersNumber": "Containers:",
            "status": "Status:",
            "startTime": "Started:",
            "ip": "IP:",
            "summaryTitle": "Summary",
            "containerStatuses": {
              "title": "Containers",
              "name": "Container Name",
              "state": "Status",
              "status": {
                  "RUNNING": "RUNNING",
                  "WAITING": "WAITING",
                  "TERMINATED": "TERMINATED",
                  "UNKNOWN": "UNKNOWN"
              }
            },
            "volumes": {
              "title": "Volumes",
              "name": "Volume Name",
              "hostPath": "Path on Host"
            },
            "logsTitle": "Logs"
        },
        "state": {
            "RUNNING": "RUNNING",
            "PENDING": "PENDING",
            "SUCCEEDED": "SUCCEEDED",
            "FAILED": "FAILED",
            "UNKNOWN": "UNKNOWN"
        }
    },
    "services": {
      "title": "Services",
      "search": {
        "placeholder": "Search for services"
      },
      "item": {
        "summaryTitle": "Summary",
        "creation": "Created:",
        "namespace": "Namespace:",
        "ports": "Ports:"
      }
    }
  },
  "pks": {
    "new": {
      "title": "New Cluster",
      "settings": {
        "title": "Settings",
        "fieldTitleEndpoint": "PKS Endpoint",
        "fieldTitleName": "Cluster Name",
        "nameFieldRequired": "Cluster name is required.",
        "fieldTitlePlan": "Plan",
        "fieldTitleMasterHostName": "Master Host Name",
        "masterHostNameFieldRequired": "Master host name is required",
        "fieldTitleMasterHostPort": "Master Host Port",
        "masterHostPortFieldNotInteger": "Master host port must be an integer bigger than 0.",
        "fieldTitleNumberNodes": "Worker Nodes",
        "workerFieldRequired": "Worker field is required. Only integer values bigger than 0 can be entered.",
        "fieldConnectBy": "Connect By",
        "labelConnectByHostname": "Master Host Name",
        "labelConnectByIP": "Master Node IP"
      }
    },
    "edit": {
      "title": "Edit Cluster"
    },
    "add": {
      "title": "Add Cluster",
      "existingClusters": {
        "descriptionText": "Select an endpoint and then select one existing, unassigned Kubernetes cluster to add to the current business group.",
        "fieldTitleEndpoint": "PKS Endpoint",
        "columnTitleName": "Name",
        "columnTitleHostname": "Hostname",
        "columnTitleMasterNodesIPs": "Master IPs",
        "columnTitleMastersCount": "# Masters",
        "columnTitleWorkersCount": "# Workers",
        "columnTitlePlan": "Plan",
        "columnTitleLastAction": "Last Action",
        "columnTitleLastActionStatus": "Last Action Status",
        "columnTitleInAdmiral": "Registered",
        "multipleSelectedClustersWarning": "Cannot add more than one cluster at a time.",
        "clusterAlreadyRegisteredWarning": "Cannot add selected cluster. It is already added.",
        "operationInProgressWarning": "Cannot add selected cluster. There is an operation in progress.",
        "yes": "Yes",
        "no": "No",
        "count": "clusters"
      }
    }
  },
  "kubernetes": {
    "clusters": {
      "title": "PKS Clusters",
      "addBtn": "Add Cluster",
      "newBtn": "New Cluster",
      "nodeCount": "Nodes",
      "dashboard": "Dashboard",
      "edit": {
        "name": "Name",
        "nameRequired": "Name is required.",
        "description": "Description",
        "url": "URL",
        "urlRequired": "Cluster URL is required.",
        "credentials": "Credentials"
      },
      "search": {
        "placeholder": "Search for Clusters"
      },
      "add": {
        "existing": "Existing PKS Cluster",
        "external": "External Cluster"
      },
      "details": {
        "summary": {
          "title": "Summary",
          "nodeCount": "Nodes:",
          "dashboard": "Dashboard:",
          "planName": "Plan:",
          "dashboardInstalled": "INSTALLED",
          "dashboardNotInstalled": "NOT INSTALLED",
          "totalMemory": "Total Memory:"
        },
        "nodes": {
          "title": "Nodes",
          "searchPlaceholder": "Search for nodes",
          "nameColumn": "Name",
          "cpuCountColumn": "# CPUs",
          "totalMemoryColumn": "Total Memory",
          "powerState": {
            "ON": "On",
            "OFF": "Off"
          },
          "count": "nodes"
        }
      }
    },
    "deployments": {
      "title": "Deployments",
      "search": {
        "placeholder": "Search for deployments"
      },
      "item": {
        "creation": "Created:",
        "namespace": "Namespace:",
        "containersNumber": "Containers:",
        "restartPolicy": "Restart Policy:",
        "strategy": "Strategy:",
        "replicas": "Replicas:",
        "terminationGracePeriodSeconds": "Termination Grace Period (seconds):",
        "dnsPolicy": "DNS Policy:",
        "summaryTitle": "Summary",
        "containersTitle": "Containers",
        "containers": {
          "name": "Name",
          "image": "Image",
          "env": "Env"
        }
      }
    },
    "pods": {
        "title": "Pods",
        "search": {
            "placeholder": "Search for pods"
        },
        "item": {
            "creation": "Created:",
            "namespace": "Namespace:",
            "containersNumber": "Containers:",
            "status": "Status:",
            "startTime": "Started:",
            "ip": "IP:",
            "summaryTitle": "Summary",
            "containerStatuses": {
              "title": "Containers",
              "name": "Container Name",
              "state": "Status"
            },
            "volumes": {
              "title": "Volumes",
              "name": "Volume Name",
              "hostPath": "Path on Host"
            },
            "logsTitle": "Logs"
        }
    },
    "services": {
      "title": "Services",
      "search": {
        "placeholder": "Search for services"
      },
      "item": {
        "summaryTitle": "Summary",
        "creation": "Created:",
        "namespace": "Namespace:",
        "ports": "Ports:"
      }
    }
  },
  "pks": {
    "new": {
      "title": "New Cluster",
      "settings": {
        "title": "Settings",
        "fieldRowTitleEndpoint": "PKS",
        "fieldTitleEndpoint": "PKS Endpoint",
        "fieldTitleName": "Cluster Name",
        "nameFieldRequired": "Cluster name is required.",
        "fieldTitlePlan": "Plan",
        "plan": {
          "small": "Small",
          "medium": "Medium",
          "large": "Large"
        },
        "fieldTitleNumberNodes": "Number of Nodes",
        "fieldTitleMaster": "Master",
        "masterFieldRequired": "Master field is required. Only integer values bigger than 0 can be entered.",
        "masterFieldDescription": "A single master may be suitable for dev/test clusters, but for production deployments 3 or 5 masters are more appropriate.",
        "masterFieldDescription3Nodes": "- 3 masters: A single master can fail, but the cluster will not be able to advance state. A new master needs to be joined, before the cluster can advance state.",
        "masterFieldDescription5Nodes": "- 5 masters: A single master can fail, and the cluster will be able to advance state.",
        "fieldTitleWorker": "Worker",
        "workerFieldRequired": "Worker field is required. Only integer values bigger than 0 can be entered."
      }
    },
    "edit": {
      "title": "Edit Cluster"
    },
    "add": {
      "title": "Add Cluster",
      "existingClusters": {
        "descriptionText": "Select an endpoint and then select one or more existing, unassigned Kubernetes clusters to add to the current business group.",
        "fieldTitleEndpoint": "Endpoint:",
        "columnTitleName": "Name",
        "columnTitleMastersCount": "# Masters",
        "columnTitleWorkersCount": "# Workers",
        "columnTitlePlan": "Plan",
        "columnTitleInAdmiral": "Registered",
        "yes": "Yes",
        "no": "No",
        "count": "clusters"
      }
    }
  },
  "hosts": {
    "actions": {
      "delete":{
        "title": "Remove Host",
        "confirmation": "Confirm removing of host {{hostName}}. The deployed entities associated to this host will be removed as well. The operation cannot be undone."
      },
      "enable": "Enable",
      "disable": "Disable",
      "edit": "Edit"
    },
    "state": {
      "ON": "ON",
      "OFF": "OFF",
      "UNKNOWN": "UNKNOWN",
      "SUSPEND": "DISABLED"
    },
    "verified": "Verified successfully!"
  },
  "logs": {
    "title": "Logs",
    "system": {
      "title": "System",
      "columnLogEntry": "Log Entry",
      "columnSeverity": "Severity",
      "columnTimeStamp": "Timestamp",
      "entriesCount": "log entries"
    },
    "registry": {
      "title": "Registry"
    },
    "event": {
      "type": {
          "info": "Information",
          "warning": "Warning",
          "error": "Error"
      }
    }
  },
  "identity": {
    "title": "Identity Management",
    "credentials": "Credentials",
    "certificates": "Certificates",
    "usersgroups": {
      "title": "Users & Groups",
      "description": "Import users and groups into the system. Then assign project roles to a user or group. You can also make a user a global cloud admin.",
      "fieldTitleSearch": "Search Users/Groups",
      "columnName": "User/Group Name",
      "columnPrimaryId": "Primary ID",
      "columnCloudAdmin": "Cloud Admin",
      "columnProjects": "Projects",
      "count": "users/groups",
      "notFound": "No users found",
      "assignRoleInProject": {
      "description": "Set the project and role for the user/group {{principal}}."
      }
    }
  },
  "endpoints": {
    "title": "Endpoints",
    "searchPlaceholder": "Search for endpoints",
    "new": "New Endpoint",
    "delete": "Delete",
    "deleteConfirmation": {
      "title": "Delete Endpoints",
      "description": "Confirm the deletion of the selected endpoints. The operation cannot be undone.",
      "titleSingleEndpoint": "Delete {{endpointName}}",
      "descriptionSingleEndpoint": "Confirm the deletion of {{endpointName}}. The operation cannot be undone."
    },
    "name": "Name",
    "uaaEndpoint": "UAA Endpoint",
    "apiEndpoint": "API Endpoint",
    "count": "endpoints",
    "details": {
      "titleCreate": "Create Endpoint",
      "generalTabTitle": "General",
      "nameFieldTitle": "Name",
      "nameRequired": "Name of endpoint is required.",
      "descriptionFieldTitle": "Description",
      "uaaAddressFieldTitle": "UAA Address",
      "uaaAddressRequired": "The UAA Address is required.",
      "credentials": "Credentials",
      "pksAddressFieldTitle": "PKS Address",
      "pksAddressRequired": "The PKS Address is required.",
      "testConnectionBtn": "Test Connection",
      "assignmentsTabTitle": "Plan Assignments",
      "assignmentsPlansTitle": "Plans",
      "groupSelectorTitle": "groups",
      "groupSearchPlaceholder": "group",
      "projectSelectorTitle": "projects",
      "projectSearchPlaceholder": "project",
      "planSelectorTitle": "plans",
      "planSearchPlaceholder": "plan",
      "clustersTabTitle": "Clusters",
      "connectionVerified": "Connection to endpoint is successful.",
      "certificateNotAccepted": "The certificate is not accepted. Cannot proceed."
    }
  },
  "requests": {
    "title": "Requests",
    "columnContextId": "Context ID",
    "columnPhase": "Phase",
    "columnRequest": "Request",
    "columnDetails": "Details",
    "count": "Showing last {{number}} requests",
    "error": "Error",
    "eventLogLink": "Go to event log",
    "containerLink": "Go to container",
    "compositeComponentLink": "Go to application",
    "containerNetworkLink": "Go to network",
    "containerVolumeLink": "Go to volume",
    "kubernetesDeploymentLink": "Go to deployment",
    "kubernetesClusterLink": "Go to PKS cluster",
    "deleteRequest": {
      "title": "Remove request",
      "description": "Confirm the removal of the selected requests. The operation cannot be undone."
    },
    "type": {
      "ALLOCATION_ONLY": "Allocation",
      "PROVISIONING_ONLY": "Provisioning",
      "ALLOCATION_AND_PROVISIONING": "Allocation and Provisioning",
      "REMOVE": "Deletion",
      "RESIZE": "Resizing",
      "CLUSTERING": "Clustering"
    }
  },
  "eventLogs": {
    "title": "Event Logs",
    "columnDescription": "Description",
    "columnTimestamp": "Time",
    "count": "Showing last {{number}} event logs",
    "deleteEventLog": {
      "title": "Remove event log",
      "description": "Confirm the removal of the selected event logs. The operation cannot be undone."
    }
  },
  "configuration": {
    "title": "Configuration",
    "registry": "Registry"
  },
  "errors": {
    "itemNotFound": "Item was not found."
  },
  "certificate": {
    "certificateWarning": "The certificate for {{address}} is invalid. You may be connecting to a website that is pretending to be {{address}}, which could put your confidential information at risk. Would you like to connect to the website anyway?",
    "show": "Show certificate",
    "hide": "Hide certificate",
    "validateTitle": "Verify Certficate",
    "details": {
      "commonName": "Common name",
      "issuerName": "Issuer name",
      "serial": "Serial",
      "fingerprint": "SHA Fingerprint",
      "validSince": "Valid since",
      "validTo": "Valid to"
    }
  },
  "tagDetails": {
    "affectedContainers": "Containers affected"
  },
  "edit": "Edit",
  "save": "Save",
  "create": "Create",
  "add": "Add",
  "yes": "Yes",
  "remove": "Remove",
  "delete": "Delete",
  "destroy": "Destroy",
  "details": "Details",
  "verify": "Verify",
  "update": "Update",
  "cancel": "Cancel",
  "back": "Back",
  "refresh": "Refresh",
  "unknown": "Unknown",
  "assignRoles": "Assign Project Roles",
  "makeAdmin": " Assign Admin Role",
  "unmakeAdmin": "Unassign Admin Role",
  "noItems": "No items",
  "reload": "Reload",
  "loading": "Loading ...",
  "notAvailable": "N/A",
  "selectAll": "Select All",
  "sessionExpired": "Your session is no longer valid, please log in again!",
  "navigation": {
    "home": "Home",
    "administration": "Administration",
    "deployments": "Deployments",
    "applications": "Applications",
    "containers": "Containers",
    "networks": "Networks",
    "volumes": "Volumes",
    "closures": "Closures",
    "kubernetes": {
      "title": "Kubernetes",
      "deployments": "Deployments",
      "pods": "Pods",
      "services": "Services"
    },
    "library": "Library",
    "templates": "Templates",
    "repositories": "All Repositories",
    "internalRepositories": "Built-in Repositories",
    "publicRepositories": "Repositories",
    "infrastructure": "Infrastructure",
    "clusters": "Container Host Clusters",
    "clustersVic": "Container Hosts",
    "kubernetesClusters": "PKS Clusters",
    "hosts": "Hosts",
    "placements": "Placements",
    "identityManagement": "Identity Management",
    "projects": "Projects",
    "registries": "Global Registries",
    "configuration": "Configuration",
    "logs": "Logs",
    "endpoints": "Endpoints",
    "pksEndpoints": "PKS Endpoints",
    "recentActivity": "Recent Activity",
    "requests": "Requests",
    "eventLogs": "Event Logs"
  },
  "search": {
    "occurrence": {
      "all": "Match All"
    }
  },
  "compute": {
    "resources": "Resources",
    "policies": "Policies",
    "deployments": "Deployments",
    "endpoints": {
      "title": "Endpoints"
    },
    "compute": {
      "title": "Compute"
    },
    "profiles": {
      "title": "Profiles"
    },
    "flavors": {
      "title": "Flavor Profiles",
      "edit": "Edit",
      "delete": {
        "action": "Delete",
        "title": "Delete Flavor Profile"
      },
      "endpoint": "Endpoint",
      "flavors": "Flavors"
    },
    "placements": {
      "title": "Placements"
    },
    "placementZones": {
      "title": "Placement Zones"
    },
    "machines": {
      "title": "Machines"
    },
    "networks": {
      "title": "Networks"
    }
  }
}
