auth.role.not.supported=不支持对角色 {0} 执行分配/取消分配操作。
auth.principalId.required=需要在 URI 路径中输入主体 ID。
auth.patch.principal.not.supported=不支持修补主体。
auth.body.required=“正文”是必填字段
auth.body.content.not.supported=正文内容不受支持。
auth.project.context.required=“项目上下文”是必填字段
auth.projects.name.used=项目名称“{0}”已被使用。
auth.projects.name.criteria=项目名称仅允许包含字母数字字符、句点、短划线、下划线和小写字母。
auth.projects.name.length=项目名称允许的最大长度为 254 个字符。
auth.projects.not.deletable=项目不可移除: {0}
auth.projects.not.deletable.check.failed=连接到默认注册表以确认移除项目时出错: {0}
host.resource-pool.in.use=放置区域正在使用中
host.resource-pool.endpoint.required=放置区域需要端点
endpoint.name.exists=端点名称必须唯一
host.resource-group.in.use=项目具有相关联的基础架构资源
host.credentials.in.use=凭据正在使用中
host.commit.id.not.found=找不到提交 ID 代码属性!
host.placement-zone.contains.multiple.hosts=无法转换为调度程序放置区域: 放置区域包含多个主机
host.placement-zone.contains.non-scheduler.host=无法转换为 Docker 放置区域: 放置区域包含非调度程序主机
host.placement-zone.contains.scheduler.hosts=无法转换为 Docker 放置区域: 放置区域包含调度程序主机
adapter.unsuported.auth.credentials.type=凭据类型不受支持
adapter.load.image.empty=未加载以下文件的任何内容: {0} {1}
adapter.auth.not.found=使用以下链接找不到 AuthCredentialsState: {0} {1}
adapter.container.mapper.invalid.date=日期时间 {0} 无效
adapter.exec.container.command.missing=未提供命令 {0}
adapter.docker.port.mapping.invalid=端口映射的格式无效: {0}
adapter.unsupported.registry.version=注册表版本“{0}”不受支持。
adapter.link.header.format=链接标头格式不符合要求: {0}
common.encryption.file.init=初始化加密密钥文件“{0}”时出错!
common.encryption.file.validation=验证加密密钥时出错!
common.ecryption.error=加密错误!
common.dercyption.error=解密错误!
common.ssh.command.not.finished=命令尚未终止!
common.ssh.context.init=无法初始化 SSL 上下文。
common.task.expired=任务在以下阶段终止: {0}
common.encryption.file.missing=文件“{0}”不存在!
common.ecryptor.file.invalid=加密密钥文件无效!
common.assertion.property.not.empty=“{0}”不能为空
common.assertion.property.empty=“{0}”必须为空
common.assertion.property.required=“{0}”是必填字段
common.certificate.exists.in.chain=证书链中的多个位置存在主体为 {0} 的证书。
common.certificate.null=证书不得为 Null。
common.certificate.invalid=证书链无效。
common.certificate.aliases.lowercase=别名必须全为小写字母。
common.certificate.host.connection.error=无法连接到服务器以导入 SSL 证书。
common.certificate.import.failed=为服务器导入 SSL 证书失败: {0}
common.host.address.invalid=主机地址无效: {0}
common.unsupported.scheme=方案不受支持，必须为 http 或 https: {0}
common.invalid.uri=目标 URI 无效: {0}
common.validate.container.name=容器名称“{0}”无效，仅允许使用 {1}。
common.validation.host=主机 [{0}] 无效。
common.validation.port=“{0}”不是有效的端口号。
common.name-prefix.count.positive=请求的资源计数必须为正数。
common.name-prefix.count.range=请求的资源计数必须小于该范围。
common.resource-name.characters=“prefix”的字符数必须少于 {0}
common.resource-name.digits.positive=“numberOfDigits”必须为正数。
common.resource-name.digits.range=“numberOfDigits”必须少于 {0}
common.resource-name.next-number.positive=“nextNumber”必须为正数。
common.resource-name.next-number.max=“nextNumber”必须小于最大数 {0}
common.uri.syntax.error=URI 语法错误 - 方案: {0}，主机: {1}，端口: {2}，路径: {3}
common.connection.timeout=连接超时
common.connection.refused=连接被拒绝
compute.endpoint.operation.error.creating=创建端点 {0} 时出错: {1}
compute.endpoint.operation.error.updating=更新端点 {0} 时出错: {1}
compute.endpoint.operation.error.deleting=删除端点 {0} 时出错: {1}
compute.check.credentials=检查登录凭据
compute.connection.timeout=连接超时
compute.protocol.exception=协议异常
compute.unexpected.error=意外错误: {0}
compute.illegal.argument=非法参数异常: {0}
compute.deployment-policy.in.use=部署策略正在使用中。
compute.resource-placement.unavailable=无法通过以下链接获取资源描述: {0}
compute.system-container.name.unknown= 系统容器名称未知: {0}
compute.composite-description.create.failed=无法创建复合描述
compute.registries.not.found=找不到任何注册表
compute.shell.port=找不到 shell 端口
compute.cyclic.bindings=无法评估循环绑定
compute.binding.incomplete=绑定表达式不完整，缺少右括号: {0}
compute.quieries.unrecognized=无法识别常见查询: {0}
compute.configure.host.address.missing=地址未设置
compute.configure.host.port.missing=端口未设置
compute.host.already.exists=容器主机已存在
compute.host.spec.is.required=“ContainerHostSpec”正文是必填字段
compute.host.type.not.supported=容器主机类型“{0}”不受支持
compute.host.type.not.vch=主机类型不是 VCH
compute.host.vch.version.not.supported=不支持 VCH 版本 ({0})。
compute.placement-zone.not.empty=放置区域不为空
compute.placement-zone.contains.schedulers=放置区域不为空，或者不仅仅包含 Docker 主机
compute.placement-zone.type.incorrect=放置区域类型不正确。需要类型“{0}”，当前类型为“{1}”
compute.placement-zone.type.not.supported=放置区域类型“{0}”不受支持
compute.elastic.placement.resource-pool.missing=“资源池链接”是必填字段
compute.elastic.placement.resource-pool.required=“资源池状态”是必填字段
compute.elastic.placement.body.required=“正文”是必填字段
compute.elastic.placement.resource-pool.in.url=“资源池链接”在 URL 中是必填字段
compute.registry.host.address.invalid.certificate=主机提供的证书无效: {0}
compute.registry.host.name.mismatch=注册表主机名 ({0}) 与证书 CN ({1}) 不匹配。
compute.registry.plain.http.not.allowed=不允许普通 HTTP 注册表连接。
common.resource-type.name.empty=名称不能为 Null 或空!
common.resource-type.name.mismatch=以下对象没有匹配的类型: {0}
common.resource-type.content-type.empty=内容类型不能为 Null 或空!
common.resource-type.content-type.mismatch=以下对象没有匹配的类型: {0}
compute.clone.unsupported.type=无法克隆不受支持的类型 {0}
compute.container.log.container.unavailable=无法获取容器 {0}。错误: {1}
compute.placement.memory.unavailable=内存已由其他放置预留。可用内存: {0}，请求的内存: {1}
compute.placements.delete.with.active.reservation=无法执行删除，当前活动预留数为: {0}
compute.placements.requested.too.many.instances=请求的实例数超过可用的资源放置: {0}
compute.placements.resource-desc.required=“resourceDescriptionLink”是必填字段。
compute.placements.resource.not.exists=请求的“resourceDescriptionLink”不存在释放放置: {0}
compute.placements.release.too.much=“resourceDescriptionLink”的释放放置超过先前请求的放置: {0}
compute.placements.too.few.max-instances=“maxNumberInstances”不能小于当前预留的实例数: {0}
compute.placements.active.instances=当放置存在活动实例时，无法修改“cpuShares”或“placement zones”
compute.placements.memory.limit.too.little=内存限制不能少于当前预留的内存: {0}
compute.placements.too.much.memory.requested=请求的内存超出可用内存放置: {0}
compute.placements.not.enough.memory.in.zone=此放置区域的内存不足。放置区域的总内存: {0}，请求的内存: {1}
compute.placements.validation.priority=“priority”必须大于或等于零。
compute.placements.validation.max-instances=“maxNumberInstances”必须大于或等于零。
compute.placements.validation.memory=“memoryLimit”必须为 0 (无限制)，或至少为 {0} 字节 ({1} MB)。
compute.placements.validation.cpu=“cpuShares”必须大于或等于零。
compute.placements.invalid.resource.type=放置资源类型不受支持
compute.container.data-collection.single=只能启动容器数据收集的一个实例
compute.entity.data-collection.single=只能启动 kubernetes 实体数据收集的一个实例
compute.networks.data-collection.single=只能启动网络数据收集的一个实例
compute.volumes.data-collection.single=只能启动列表容器数据收集的一个实例
compute.shell.container.links.required=需要 {0} 或 {1}
compute.shell.container.id.required=“容器 ID”是必填字段。
compute.template.search.options=不能同时使用“templatesOnly”和“imagesOnly”
compute.network.validate.cidr=指定的输入不是有效的 CIDR 标记: {0}
compute.network.validate.ip=指定的输入不是有效的 IP 地址: {0}
compute.network.validate.name=“网络名称”是必填字段。
compute.network.validate.name.length=“网络名称”应至少包含 2 个字符。
compute.network.validate.bad.name=“网络名称”应以字母、数字或者下划线开头和结尾。“网络名称”不应包含任何特殊字符 (下划线、连字符、点和空格除外)。
compute.network.component.not.found=找不到名称为“{0}”的相关网络组件。
compute.network.constraints.not.satisfied.by.profile=所选配置文件“{0}”不满足网络“{1}”的限制 {2}。
compute.network.no.profiles.match=找不到与具有限制 {2} 且类型为 {1} 的网络“{0}”匹配的任何配置文件。
compute.network.no.profiles.match.outbound.access=找不到与具有出站访问和限制 {2} 且类型为 {1} 的网络“{0}”匹配的任何配置文件。
compute.network.resource-group.in.use=资源组已关联到 {0} 网络{1}
compute.volume-binding.format=卷必须为 [host_path|named_volume:]container_path[:ro]
compute.volumes.invalid.directory=卷目录无效。
compute.volumes.name.required=“卷名称”是必填字段。
compute.volumes.name.is.path=“卷名称”不得是路径。
compute.template.components.unsupported.type=组件“{0}”具有不受支持的类型“{1}”
compute.template.yaml.error=处理蓝图 YAML 内容时出错: {0}
compute.template.yaml.compose2.error=处理 Docker Compose v2 YAML 内容时出错: {0}
compute.template.yaml.content.error=处理 YAML 内容时出错: {0}
compute.template.yaml.content.multiple.definitions=Docker Compose 和 YAML 蓝图不支持多个 YAML 定义。
compute.template.yaml.invalid=YAML 输入无效。
compute.external.deserialization.error=外部对象类“{0}”无效!
compute.service.network.deserialization.error=网络对象类“{0}”无效!
compute.endpoint.adapter.delete.endpoint.missing=DELETE 路径中未提供任何端点链接: {0}
compute.endpoint.adapter.invalid.state=为更新传递的状态无效
compute.endpoint.adapter.enpoint.type.required=“端点类型”是必填字段
compute.endpoint.adapter.body.required=“正文”是必填字段
compute.endpoint.type.required=必须指定端点或端点类型
compute.endpoint.link.or.type.only=必须仅指定端点链接或端点类型之一
compute.endpoint.exists=端点已存在
compute.body.required=“正文”是必填字段
compute.content.unknown.yaml.type=YAML 内容类型未知! 仅支持蓝图和 Docker Compose v2 格式。
compute.content.deserialize.template=无法反序列化复合模板序列化内容!
compute.add.host.connection.error=连接到 {0} 时出错: {1}
compute.host.port.unavailable=无法分配主机端口。没有可用端口。
ip.address.invalid=IP 地址无效: {0}
request.registry.whitelist.check.failed=映像 {0} 的注册表白名单检查失败
request.container.allocation.missing.resource-pool=放置状态没有“resourcePoolLink”
request.container.allocation.host.missing=“computeHostLink”和“resourceNames”在此状态下不能为 Null。
request.container.redeployment.containerDescriptionLink.empty=“containerDescriptionLink”不得为空
request.container.redeployment.containerStateLinks.empty=“containerStateLinks”不得为空
request.container.redeployment.contextId.empty=“contextId”不得为空
request.container.redeployment.event-log.create-fail=无法发布事件日志
request.container-inspector.container-description.not-provided=未提供容器描述。
request.container-inspector.grouped-containers.not-provided=未提供分组容器。
request.container-recommendation.inspected-container-states.not-provided=未提供已检查的容器状态。
request.container.allocation.resource-names.missing=此阶段需要资源名称。
request.placement.compute.missing=没有合适的主机
request.placement.hosts.missing=未找到已打开电源的容器主机。
request.placement.compute-description.unsupported=找不到支持以下类型的可用主机计算资源描述: {0}
request.composition.resource-links.missing=找不到已分配资源的“resourceLinks”。
request.compute.allocation.resource-pool.missing=放置状态没有“resourcePoolLink”
request.compute.placement.placements.unavailable=放置区域中找不到计算资源放置候选项: {0}
request.compute.placement.powered-on.placements.unavailable=放置区域中找不到已打开电源的计算资源放置候选项: {0}
request.compute.placement.compute-description.missing=找不到计算资源放置的计算资源描述
request.compute.provision.empty=没有要置备的计算资源实例
request.compute.network.provision.empty=没有要置备的计算资源网络实例
request.compute.network.provision.multiple-nics=不能将多个网卡连接到同一网络
request.compute.reservation.placements.missing=找不到任何放置
request.compute.reservation.resource-pools.empty=“resourcePoolsPerGroupPlacementLinks”不得为空
request.compute.reservation.resource-pools.empty.tags=不存在满足所有请求要求的放置。请检查是否存在合适的放置和放置区域以及它们是否已正确标记。
request.container-control-loop.single-instance=只能启动容器控制循环服务的一个实例
request.container-control-loop.containers-not-provided=未提供容器
request.container-control-loop-state.path-fail=无法更新容器控制循环状态
request.container-control-loop-state.create-redeployment-task-fail=无法创建重新部署任务
request.base.affinity.filter.no.containers=找不到相符的容器: 筛选器为 [{0}]，值为 [{1}] 且 contextId 为 [{2}]。
request.base.affinity.filter.many.containers=容器主机选择大小 [{0}] (筛选器为 [links]，值为 [{1}] 且 contextId 为 [{2}]) 不能大于 1。
request.base.affinity.filter.container-descriptions.unavailable=未找到相符的容器描述: {0} [{1}]。
request.exposed-ports.filter.containers.query.error=查询容器状态时出错。
request.exposed-ports.filter.compute-hosts.unavailable=找不到具有未公开的端口 {0} 的计算资源主机。
request.volumes.filter.hosts.unavailable=找不到支持“{0}”卷驱动程序的主机。
request.volumes.filter.multiple.containers=检测到不同的主机上的多个容器共享本地卷。
request.volumes.filter.no.host=无法将共享本地卷的容器置于同一个主机上。
request.volumes.filter.container-descriptions.query=筛选本地卷名称为 {0} 的容器描述时出现异常。错误: [{1}]
request.service.affinity.filter.no.containers=找不到相符的容器: 筛选器为 [{0}]，值为 [{1}] 且 contextId 为 [{2}]。
request.service.affinity.filter.many.hosts=容器主机选择大小 [{0}] (筛选器为 [links]，值为 [{1}] 且 contextId 为 [{2}]) 不能大于 1。
request.service.affinity.filter.no.container-descriptions=未找到相符的容器描述: {0} [{1}]。
request.service.anti-affinity.filter.no.host={0} 中没有与反关联性规则 {1} 匹配的主机。
request.volumes.from.filter.no.containers=找不到相符的容器: 筛选器为 [{0}]，值为 [{1}] 且 contextId 为 [{2}]。
request.volumes.from.filter.many.hosts=容器主机选择大小 [{0}] (筛选器为 [links]，值为 [{1}] 且 contextId 为 [{2}]) 不能大于 1。
request.volumes.from.filter.no.container-descriptions=未找到相符的容器描述: {0} [{1}]。
request.system.container.day2=系统容器不支持实施后操作
request.resource-count.zero=“resourceCount”必须大于 0。
request.container.allocation.group.empty=“groupResourcePlacementLink”不得为空
request.container.allocation.resource.count=“资源计数”必须等于分配后的资源数。
request.resource-count.equals.resource-links=“resourceLinks”大小必须等于“resourcesCount”
request.resource-type.not.supported=资源类型不受支持: {0}
request.operation.not.supported=操作不受支持: {0}
request.closure.operation.not.supported=闭包服务类型不支持操作: {0}
request.supported.resource-types=仅支持 [{0}] 资源类型。
request.composition.cyclic.dependency=检测到循环依赖关系。
request.composition.cyclic.dependency.processing=处理后检测到循环依赖关系。
request.composition.dependency.not.resolved=无法解析组件 [{1}] 中名称为 [{0}] 的依赖关系。
request.composition.duplicate.names=资源 [{1}] 和 [{2}] 检测到具有重复名称 [{0}] 的组件。
request.composition.cyclic.dependency.during.process=处理时检测到循环依赖关系。
request.composition.unsupported.type=类型不受支持。必须为: {0}、{1}、{2} 或 {3}
request.compute.allocation.links.empty=“groupResourcePlacementLink”和“resourcePoolLink”不能同时为空。
request.provision.links.empty=“computeDescriptionLink”是必填字段
request.affinity.computes.not.found=找不到符合筛选器的计算资源: 值为 [{0}]，contextId 为 [{1}]。
request.affinity.multiple.selections=计算资源主机选择大小 [{0}] (筛选器为 [links]，值为 [{1}]，且 contextId 为 [{2}]) 不能大于 1。
request.affinity.no.compute-doesc=未找到相符的计算资源描述: [{0}]。
request.anti-affinity.no.host.matches=%s 中没有与反关联性规则 %s 匹配的主机。
request.container.stats.not.supported=VCH 主机不支持容器统计信息。
security.group.resource-group.in.use=资源组已关联到 {0} 安全组{1}
subnet.range.ip.invalid.end=结束 IP 地址无效: {0}
subnet.range.ip.invalid.start=起始 IP 地址无效: {0}
subnet.range.ip.must.be.specified=必须指定 IP 地址
subnet.range.ip.outside.range.end=结束 IP 地址 {0} 无效。它位于 CIDR 指定的 IP 范围之外: {1}
subnet.range.ip.outside.range.start=起始 IP 地址 {0} 无效。它位于 CIDR 指定的 IP 范围之外: {1}
subnet.range.ip.overlap=提交的 IP 地址范围与以前定义的 IP 地址范围重叠: {0}-{1}
subnet.range.ip.start.must.be.smaller=子网范围无效。起始 IP 地址必须小于结束 IP 地址
subnet.resource-group.in.use=资源组已关联到 {0} 子网{1}
ui.container-image.container.name.missing=需要以容器映像名称作为值的 URL 参数“{0}”。
